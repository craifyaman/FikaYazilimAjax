// <auto-generated />
using System;
using Fika.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fika.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fika.Model.Grup", b =>
                {
                    b.Property<int>("GrupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GrupID");

                    b.ToTable("Grups");
                });

            modelBuilder.Entity("Fika.Model.Musteri", b =>
                {
                    b.Property<int>("MusteriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GrupID")
                        .HasColumnType("int");

                    b.Property<int?>("OperasyonIDPersonelID")
                        .HasColumnType("int");

                    b.Property<int?>("SatisIDPersonelID")
                        .HasColumnType("int");

                    b.Property<string>("Unvan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusteriID");

                    b.HasIndex("GrupID");

                    b.HasIndex("OperasyonIDPersonelID");

                    b.HasIndex("SatisIDPersonelID");

                    b.ToTable("Musteris");
                });

            modelBuilder.Entity("Fika.Model.Personel", b =>
                {
                    b.Property<int>("PersonelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Isim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonelID");

                    b.ToTable("Personels");
                });

            modelBuilder.Entity("Fika.Model.SatisHareket", b =>
                {
                    b.Property<int>("SatisHareketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MusteriID")
                        .HasColumnType("int");

                    b.Property<int>("PersonelID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SatisZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("StokID")
                        .HasColumnType("int");

                    b.HasKey("SatisHareketID");

                    b.HasIndex("MusteriID");

                    b.HasIndex("PersonelID");

                    b.HasIndex("StokID");

                    b.ToTable("SatisHarekets");
                });

            modelBuilder.Entity("Fika.Model.Stok", b =>
                {
                    b.Property<int>("StokID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StokID");

                    b.ToTable("Stoks");
                });

            modelBuilder.Entity("Fika.Model.Musteri", b =>
                {
                    b.HasOne("Fika.Model.Grup", "Grup")
                        .WithMany()
                        .HasForeignKey("GrupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fika.Model.Personel", "OperasyonID")
                        .WithMany("Operasyon")
                        .HasForeignKey("OperasyonIDPersonelID");

                    b.HasOne("Fika.Model.Personel", "SatisID")
                        .WithMany("Satis")
                        .HasForeignKey("SatisIDPersonelID");

                    b.Navigation("Grup");

                    b.Navigation("OperasyonID");

                    b.Navigation("SatisID");
                });

            modelBuilder.Entity("Fika.Model.SatisHareket", b =>
                {
                    b.HasOne("Fika.Model.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fika.Model.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fika.Model.Stok", "Stok")
                        .WithMany()
                        .HasForeignKey("StokID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");

                    b.Navigation("Personel");

                    b.Navigation("Stok");
                });

            modelBuilder.Entity("Fika.Model.Personel", b =>
                {
                    b.Navigation("Operasyon");

                    b.Navigation("Satis");
                });
#pragma warning restore 612, 618
        }
    }
}
